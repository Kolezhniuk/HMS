// <auto-generated />
using System;
using HandMadeShop.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HandMadeShop.Domain.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20190930131855_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 945, DateTimeKind.Local).AddTicks(171));

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 942, DateTimeKind.Local).AddTicks(6981));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Category");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.DeliveryMethod.DeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 55, 5, DateTimeKind.Local).AddTicks(422));

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 55, 4, DateTimeKind.Local).AddTicks(9487));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("DeliveryMethod");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 948, DateTimeKind.Local).AddTicks(5472));

                    b.Property<int?>("DetailId");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 948, DateTimeKind.Local).AddTicks(4954));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Detail");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 951, DateTimeKind.Local).AddTicks(2547));

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 951, DateTimeKind.Local).AddTicks(2074));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Measure");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 970, DateTimeKind.Local).AddTicks(3331));

                    b.Property<int>("DeliveryMethodId");

                    b.Property<int>("DeliveryPrice");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 970, DateTimeKind.Local).AddTicks(2751));

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<int>("OrderStateId");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<int>("PaymentMethodId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryMethodId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderStateId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 976, DateTimeKind.Local).AddTicks(308));

                    b.Property<double>("Discount");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 975, DateTimeKind.Local).AddTicks(9398));

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<double>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.OrderState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 978, DateTimeKind.Local).AddTicks(5616));

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 978, DateTimeKind.Local).AddTicks(5157));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("OrderState");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.OrderStateHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 980, DateTimeKind.Local).AddTicks(6065));

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 980, DateTimeKind.Local).AddTicks(5608));

                    b.Property<int?>("NewOrderStateId");

                    b.Property<int?>("OldOrderStateId");

                    b.Property<int>("OrderId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OldOrderStateId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderStateHistory");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 987, DateTimeKind.Local).AddTicks(4531));

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 987, DateTimeKind.Local).AddTicks(3857));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 989, DateTimeKind.Local).AddTicks(3899));

                    b.Property<bool>("IsAvailable");

                    b.Property<bool>("IsHidden");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 54, 989, DateTimeKind.Local).AddTicks(3314));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId", "CategoryId")
                        .IsUnique();

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.ProductDetail", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("DetailId");

                    b.HasKey("ProductId", "DetailId");

                    b.HasIndex("ProductId", "DetailId")
                        .IsUnique();

                    b.ToTable("ProductDetail");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.ProductMeasure", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("MeasureId");

                    b.HasKey("ProductId", "MeasureId");

                    b.HasIndex("MeasureId");

                    b.HasIndex("ProductId", "MeasureId")
                        .IsUnique();

                    b.ToTable("ProductMeasure");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 55, 1, DateTimeKind.Local).AddTicks(2719));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool?>("Gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValue(new DateTime(2019, 9, 30, 16, 18, 55, 1, DateTimeKind.Local).AddTicks(2200));

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Category", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.Category", "Parent")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Detail", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.Detail", "Parent")
                        .WithMany("Details")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.Order", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.DeliveryMethod.DeliveryMethod", "DeliveryMethod")
                        .WithMany()
                        .HasForeignKey("DeliveryMethodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HandMadeShop.Domain.Entities.OrderState", "OrderState")
                        .WithMany()
                        .HasForeignKey("OrderStateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HandMadeShop.Domain.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HandMadeShop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HandMadeShop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.OrderStateHistory", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.OrderState", "OldOrderState")
                        .WithMany()
                        .HasForeignKey("OldOrderStateId");

                    b.HasOne("HandMadeShop.Domain.Entities.Order", "Order")
                        .WithMany("OrderStateHistories")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HandMadeShop.Domain.Entities.OrderState", "NewOrderState")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HandMadeShop.Domain.Entities.User", "User")
                        .WithMany("OrderStateHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HandMadeShop.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.ProductDetail", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.Detail", "Detail")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HandMadeShop.Domain.Entities.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HandMadeShop.Domain.Entities.ProductMeasure", b =>
                {
                    b.HasOne("HandMadeShop.Domain.Entities.Measure", "Measure")
                        .WithMany("ProductMeasures")
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HandMadeShop.Domain.Entities.Product", "Product")
                        .WithMany("ProductMeasures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
